package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

// Singleton + DBCP 만들기
public class BoardDao {
	private static BoardDao instance;
	//반드시 기본생성자를 private으로 만들어주어야 한다.
	private BoardDao() {
	}
	
	public static BoardDao getInstance() {
		if (instance == null) {
			instance = new BoardDao();
		}
		return instance;
	}
	
	private Connection getConnection() throws SQLException {
		Connection conn = null;
		
		try {
			Context ctx = new InitialContext();
			//ds에 Naming이 OracleDB랑 맞는 것들을 넣어준다는 의미!!
			DataSource ds = (DataSource) ctx.lookup("java:comp/env/jdbc/OracleDB");
			conn = ds.getConnection();
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return conn;
	}
	
	public int getTotalCnt() throws SQLException {
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		int result = 0;
		String sql = "SELECT COUNT(*) FROM board";
		
		
		try {
			conn = getConnection();
			stmt  = conn.createStatement();
			rs = stmt.executeQuery(sql);
			
			if (rs.next()) {
				result = rs.getInt(1);
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			if (rs != null) rs.close();
			if (stmt != null) stmt.close();
			if (conn != null) conn.close();
		}
		return result;
	}
	
	public List<Board> boardList(int startRow, int endRow) throws SQLException {
		List<Board> boardList = new ArrayList<Board>();
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String sql = "SELECT * FROM ( SELECT ROWNUM rn, a.*"
				+ "FROM ( SELECT * FROM board ORDER BY ref DESC, re_step) a )"
				+ "WHERE rn BETWEEN ? AND ?;";
		System.out.println("boardList sql=>" + sql);
		
		try {
			conn = getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, startRow);
			pstmt.setInt(2, endRow);
			rs = pstmt.executeQuery();
			
			while (rs.next()) {
				Board board = new Board();
				board.setNum(rs.getInt(1));
				board.setWriter(rs.getString(2));
				board.setSubject(rs.getString(3));
				board.setContent(rs.getString(4));
				board.setEmail(rs.getString(5));
				board.setReadcount(rs.getInt(6));
				board.setPasswd(rs.getString(7));
				board.setIp(rs.getString(8));
				board.setReg_date(rs.getDate(9));
				boardList.add(board);
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			if (rs != null) rs.close();
			if (pstmt != null) pstmt.close();
			if (conn != null) conn.close();
		}
		return boardList;
	}
}
